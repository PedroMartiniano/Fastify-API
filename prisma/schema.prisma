// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MEMBER
}

model User {
  id         String @id @default(uuid())
  email      String @unique
  username   String @unique
  image      String
  first_name String
  last_name  String
  password   String

  role   Role @default(MEMBER)
  status Int  @default(1)

  alumnAnswers AlumnAnswer[]
  purchase     Purchase[]
}

model Staff {
  id       String @id @default(uuid())
  cpf      String @unique
  email    String @unique
  username String @unique
  role     Role   @default(ADMIN)
  password String
  status   Int    @default(1)

  Course Course[]
  Module Module[]
}

model Course {
  id          String @id @default(uuid())
  name        String
  description String
  rating      Float  @default(0.0)
  qtdeRating  Int    @default(0)
  image       String
  price       Float
  id_staff    String
  status      Int    @default(1)

  staff    Staff      @relation(fields: [id_staff], references: [id])
  modules  Module[]
  purchase Purchase[]
}

model Module {
  id          String   @id @default(uuid())
  name        String
  description String
  createdAt   DateTime @default(now())
  id_course   String
  id_staff    String
  status      Int      @default(1)

  staff  Staff   @relation(fields: [id_staff], references: [id])
  course Course  @relation(fields: [id_course], references: [id])
  tasks  Tasks[]
  Class  Class[]
}

model Class {
  id          String  @id @default(uuid())
  name        String
  description String?
  link        String
  id_module   String

  module Module @relation(fields: [id_module], references: [id])
}

model Tasks {
  id           String   @id @default(uuid())
  question     String
  answers      String
  right_answer String
  id_module    String
  createdAt    DateTime @default(now())
  status       Int      @default(1)

  module       Module        @relation(fields: [id_module], references: [id])
  alumnAnswers AlumnAnswer[]
}

model AlumnAnswer {
  id           String   @id @default(uuid())
  id_alumn     String
  id_task      String
  alumn_answer String
  is_right     Boolean
  answer_date  DateTime @default(now())

  alumn User  @relation(fields: [id_alumn], references: [id])
  task  Tasks @relation(fields: [id_task], references: [id])
}

model Purchase {
  id            String   @id @default(uuid())
  id_user       String
  id_course     String
  purchase_date DateTime @default(now())
  status        Int      @default(1)

  user   User   @relation(fields: [id_user], references: [id])
  course Course @relation(fields: [id_course], references: [id])
}
